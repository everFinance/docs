"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[2728],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return h}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),l=u(n),m=o,h=l["".concat(s,".").concat(m)]||l[m]||d[m]||i;return n?r.createElement(h,a(a({ref:t},p),{},{components:n})):r.createElement(h,a({ref:t},p))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[l]="string"==typeof e?e:o,a[1]=c;for(var u=2;u<i;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},811:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return a},default:function(){return d},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return u}});var r=n(3117),o=(n(7294),n(3905));const i={sidebar_position:5},a="ethConnectedSigner",c={unversionedId:"sdk/everpay-js/configuration/ethConnectedSigner",id:"sdk/everpay-js/configuration/ethConnectedSigner",title:"ethConnectedSigner",description:"Configuration item function",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/sdk/everpay-js/configuration/ethConnectedSigner.md",sourceDirName:"sdk/everpay-js/configuration",slug:"/sdk/everpay-js/configuration/ethConnectedSigner",permalink:"/en/docs/sdk/everpay-js/configuration/ethConnectedSigner",draft:!1,editUrl:"https://github.com/everFinance/docs/edit/master/i18n/en/docusaurus-plugin-content-docs/current/sdk/everpay-js/configuration/ethConnectedSigner.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"sdk",previous:{title:"chainType",permalink:"/en/docs/sdk/everpay-js/configuration/chainType"},next:{title:"arJWK",permalink:"/en/docs/sdk/everpay-js/configuration/arJWK"}},s={},u=[{value:"Configuration item function",id:"configuration-item-function",level:2},{value:"How to configure",id:"how-to-configure",level:2},{value:"ethereum wallet: imToken/MetaMask, etc",id:"ethereum-wallet-imtokenmetamask-etc",level:3},{value:"RPC API + privateKey",id:"rpc-api--privatekey",level:3},{value:"Conflicts with arJWK configuration items",id:"conflicts-with-arjwk-configuration-items",level:2},{value:"Relationship to account configuration items",id:"relationship-to-account-configuration-items",level:2}],p={toc:u},l="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(l,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"ethconnectedsigner"},"ethConnectedSigner"),(0,o.kt)("h2",{id:"configuration-item-function"},"Configuration item function"),(0,o.kt)("p",null,"This configuration item is used to operate the everPay ethereum account model account via ethereum/moonbeam/moonbase wallet and to do the following for the account"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"deposit: transfer assets on ethereum blockchain to everPay multi-signature contract address using ",(0,o.kt)("inlineCode",{parentName:"li"},"ethConnectedSigner")),(0,o.kt)("li",{parentName:"ul"},"transfer: use ",(0,o.kt)("inlineCode",{parentName:"li"},"ethConnectedSigner")," to call ethereum ",(0,o.kt)("inlineCode",{parentName:"li"},"personalSign")," to secure access to the everPay account"),(0,o.kt)("li",{parentName:"ul"},"withdraw: use ",(0,o.kt)("inlineCode",{parentName:"li"},"ethConnectedSigner")," to call ethereum ",(0,o.kt)("inlineCode",{parentName:"li"},"personalSign")," to secure access to the everPay account")),(0,o.kt)("h2",{id:"how-to-configure"},"How to configure"),(0,o.kt)("p",null,"everpay-js integrates with ",(0,o.kt)("a",{parentName:"p",href:"https://docs.ethers.io/v5/"},"ethers.js")," for ethereum signing, sending transactions."),(0,o.kt)("p",null,"This configuration item also uses ",(0,o.kt)("a",{parentName:"p",href:"https://docs.ethers.io/v5/api/signer/#Signer"},"ethers.js#Signer")," as parameter type."),(0,o.kt)("h3",{id:"ethereum-wallet-imtokenmetamask-etc"},"ethereum wallet: imToken/MetaMask, etc"),(0,o.kt)("p",null,"Reference from ",(0,o.kt)("a",{parentName:"p",href:"https://docs.ethers.io/v5/getting-started/#getting-started--connecting"},"ethers.js Connecting to Ethereum: Metamask")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const provider = new ethers.providers.Web3Provider(window.ethereum)\nconst signer = provider.getSigner()\nconst everpay = new Everpay({\n  account: window.ethereum.selectedAddress,\n  chainType: 'ethereum',\n  ethConnectedSigner: signer\n})\n")),(0,o.kt)("h3",{id:"rpc-api--privatekey"},"RPC API + privateKey"),(0,o.kt)("p",null,"Reference from ",(0,o.kt)("a",{parentName:"p",href:"https://docs.ethers.io/v5/api/signer/#Wallet"},"ethers.js Wallet API")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const address = 'YOUR ADDRESS'\nconst privateKey = 'YOUR PRIVATE KEY'\nconst provider = new ethers.providers.InfuraProvider('kovan')\nconst signer = new ethers.Wallet(privateKey, provider)\nconst everpay = new Everpay({\n  account: address,\n  chainType: 'ethereum',\n  ethConnectedSigner: signer,\n})\n")),(0,o.kt)("admonition",{title:"Private key leakage risk",type:"danger"},(0,o.kt)("p",{parentName:"admonition"},"This method passes the private key explicitly in the code, which is a security risk")),(0,o.kt)("h2",{id:"conflicts-with-arjwk-configuration-items"},"Conflicts with arJWK configuration items"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"ethConnectedSigner")," is used for everPay account operations for the ethereum account model, while ",(0,o.kt)("inlineCode",{parentName:"p"},"arJWK")," is used for everPay account operations for the arweave account model. ",(0,o.kt)("strong",{parentName:"p"},"Only one account model can be used for the same Everpay instance"),", but developers can create multiple Everpay instances for more complex applications."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const ethEverpay = new Everpay({\n  account: '0x2ca81e1253f9426c62Df68b39a22A377164eeC92',\n  chainType: 'ethereum',\n  ethConnectedSigner\n})\n\nconst arEverpay = new Everpay({\n  account: '5NPqYBdIsIpJzPeYixuz7BEH_W7BEk_mb8HxBD3OHXo',\n  chainType: 'arweave',\n  arJWK\n})\n")),(0,o.kt)("h2",{id:"relationship-to-account-configuration-items"},"Relationship to account configuration items"),(0,o.kt)("p",null,"When you need to call everpay-js operation-api, ",(0,o.kt)("inlineCode",{parentName:"p"},"account")," parameter is required. And when it is an ethereum account model, the ",(0,o.kt)("inlineCode",{parentName:"p"},"account")," parameter must match the ethereum wallet address corresponding to ",(0,o.kt)("inlineCode",{parentName:"p"},"ethConnectedSigner"),"."))}d.isMDXComponent=!0}}]);