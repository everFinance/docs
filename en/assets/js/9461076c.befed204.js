"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[8801],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return m}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=r.createContext({}),u=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=u(e.components);return r.createElement(p.Provider,{value:n},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),l=u(t),f=o,m=l["".concat(p,".").concat(f)]||l[f]||d[f]||i;return t?r.createElement(m,a(a({ref:n},s),{},{components:t})):r.createElement(m,a({ref:n},s))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=f;var c={};for(var p in n)hasOwnProperty.call(n,p)&&(c[p]=n[p]);c.originalType=e,c[l]="string"==typeof e?e:o,a[1]=c;for(var u=2;u<i;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},9038:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return a},default:function(){return d},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return u}});var r=t(3117),o=(t(7294),t(3905));const i={sidebar_position:5},a="chainType",c={unversionedId:"sdk/everpay-js/configuration/chainType",id:"sdk/everpay-js/configuration/chainType",title:"chainType",description:"Configuration item function",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/sdk/everpay-js/configuration/chainType.md",sourceDirName:"sdk/everpay-js/configuration",slug:"/sdk/everpay-js/configuration/chainType",permalink:"/en/docs/sdk/everpay-js/configuration/chainType",draft:!1,editUrl:"https://github.com/everFinance/docs/edit/master/i18n/en/docusaurus-plugin-content-docs/current/sdk/everpay-js/configuration/chainType.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"sdk",previous:{title:"account",permalink:"/en/docs/sdk/everpay-js/configuration/account"},next:{title:"ethConnectedSigner",permalink:"/en/docs/sdk/everpay-js/configuration/ethConnectedSigner"}},p={},u=[{value:"Configuration item function",id:"configuration-item-function",level:2},{value:"Configuration Type",id:"configuration-type",level:2},{value:"moonbase Example",id:"moonbase-example",level:2}],s={toc:u},l="wrapper";function d(e){let{components:n,...t}=e;return(0,o.kt)(l,(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"chaintype"},"chainType"),(0,o.kt)("h2",{id:"configuration-item-function"},"Configuration item function"),(0,o.kt)("p",null,"everPay supports the ethereum evm compatible chain. To top up, use the coins of the corresponding chain"),(0,o.kt)("h2",{id:"configuration-type"},"Configuration Type"),(0,o.kt)("p",null,"Currently support ",(0,o.kt)("inlineCode",{parentName:"p"},"ethereum"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"arweave"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"moon")),(0,o.kt)("h2",{id:"moonbase-example"},"moonbase Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const providerURL = 'https://rpc.api.moonbase.moonbeam.network'\n// Define Provider\nconst provider = new ethers.providers.StaticJsonRpcProvider(providerURL, {\n  chainId: 1287,\n  name: 'moonbase-alphanet'\n})\nconst signer = new ethers.Wallet(ethWalletHasUSDT.privateKey, provider)\n\nconst everpay = new Everpay({\n  account: ethWalletHasUSDT.address,\n  chainType: 'moon',\n  ethConnectedSigner: signer,\n  debug: true\n})\n\neverpay.deposit({\n  symbol: 'dev',\n  amount: '0.01'\n}).then(ethTx => {\n  console.log('ethTx', ethTx)\n})\n")))}d.isMDXComponent=!0}}]);